package asuHelloWorldJavaFX;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.*;
import javafx.stage.Stage;


public class ASUHelloWorldJavaFX extends Application {
	 public static void main(String[] args) {
	        launch(args);
	    }

	 public class User {
		    private String name;
		    private String password;
		    private String data;

		    public User(String name, String password, String data) {
		        this.name = name;
		        this.password = password;
		        this.data = data;
		    }

		 // Getter and setter methods for name, password and 'data'
		    //these will be implemented more later to actually collect the data
		    public String getName() {
		        return name;
		    }

		    public void setName(String name) {
		        this.name = name;
		    }

		    
		    public String getPassword() {
		        return password;
		    }

		    public void setPassword(String password) {
		        this.password = password;
		    }

		    
		    public String getData() {
		        return data;
		    }

		    public void setData(String data) {
		        this.data = data;
		    }
		}
	 
	  @Override
	    public void start(Stage primaryStage) {
		  
		// Set up the primary stage but do not show it yet
	       
	        
	        // Create the main layout and scene for the primary stage
	        TableView<User> table = new TableView<>();
	        TableColumn<User, String> nameColumn = new TableColumn<>("Name");
	        nameColumn.setCellValueFactory(new PropertyValueFactory<>("name"));
	        nameColumn.setMinWidth(100);
	        
	        TableColumn<User, String> passwordColumn = new TableColumn<>("Password");
	        passwordColumn.setCellValueFactory(new PropertyValueFactory<>("password"));
	        passwordColumn.setMinWidth(100);

	        TableColumn<User, String> dataColumn = new TableColumn<>("Data");
	        dataColumn.setCellValueFactory(new PropertyValueFactory<>("data"));
	        dataColumn.setMinWidth(200);

	        table.getColumns().addAll(nameColumn, passwordColumn, dataColumn);
	        
	        // Sample data to enter into the table
	        table.getItems().addAll(
	                new User("tom brady", "password123", "Data"),
	                new User("kanye west", "password123", "Data")
	        );


	        Region emptySpace = new Region(); //empty space for spacing

	        //creating tabs 
	        TabPane tabPane = new TabPane();
	        Tab userDataTab = new Tab("User Data", table);
	        userDataTab.setClosable(false);
	        tabPane.getTabs().add(userDataTab);

	        //creating other tabs to flip through to view more data
	        tabPane.getTabs().addAll(createTab("Console"), createTab("Player Moves"), createTab("Player History"), createTab("Account Info"), createTab("Cookies"));
	        
	        //more spacing
	        VBox momma = new VBox(10, tabPane);
	        momma.setPadding(new Insets(10));
	        
	        momma.setPadding(new Insets(10)); 
	        
	        Scene scene = new Scene(momma, 800, 600); // Window size set to 800x600.
	        
	        
	        primaryStage.setTitle("User Data Table");
	        primaryStage.setScene(scene);
	        primaryStage.show();
	        VBox mainLayout = new VBox(10, tabPane);
	        mainLayout.setPadding(new Insets(10));
	        Scene mainScene = new Scene(mainLayout, 800, 600);
	        

	        // Create the login window
	        Stage loginStage = new Stage();
	        GridPane loginPane = new GridPane();
	        loginPane.setPadding(new Insets(10));
	        loginPane.setVgap(8);
	        loginPane.setHgap(10);
		

	            // username label and text field
	            Label nameLabel = new Label("Username:");
	            TextField nameInput = new TextField();
	            nameInput.setPromptText("Username");

	            // password label and password field
	            Label passLabel = new Label("Password:");
	            PasswordField passInput = new PasswordField();
	            passInput.setPromptText("Password");

	            // Login button
	            Button loginButton = new Button("Login");
	            loginButton.setOnAction(e -> {
	                primaryStage.show();
	                loginStage.close();
	            });

	            GridPane.setConstraints(nameLabel, 0, 0);
	            GridPane.setConstraints(nameInput, 1, 0);
	            GridPane.setConstraints(passLabel, 0, 1);
	            GridPane.setConstraints(passInput, 1, 1);
	            GridPane.setConstraints(loginButton, 1, 2);

	            loginPane.getChildren().addAll(nameLabel, nameInput, passLabel, passInput, loginButton);

	            Scene loginScene = new Scene(loginPane, 300, 150);
	            loginStage.setScene(loginScene);
	            loginStage.setTitle("Login");
	            loginStage.showAndWait();
	            
	            primaryStage.setTitle("User Data Table");
	            primaryStage.setScene(mainScene);
	  }
	        
	        
	        
	  private Tab createTab(String title) {
		    Tab tab = new Tab(title);
		    TextArea consoleTextArea = new TextArea();
		    consoleTextArea.setEditable(false); // Makes the text area non-editable
		    consoleTextArea.setStyle("-fx-control-inner-background: black; -fx-text-fill: limegreen; -fx-font-family: 'Consolas';"); // Console-like styling

		    // console output
		    consoleTextArea.setText("Console Output\n---");

		    tab.setContent(consoleTextArea);
		    tab.setClosable(false);  // Ensure the tabs can't be closed
		    return tab;
		}
	  
}
